{
  "type": "excalidraw",
  "version": 2,
  "source": "https://excalidraw.com",
  "elements": [
    {
      "id": "nta5sT7dQgBvG1oc6XjKN",
      "type": "text",
      "x": 284.39996337890625,
      "y": 341.4000244140625,
      "width": 1652.8675537109375,
      "height": 630,
      "angle": 0,
      "strokeColor": "#1971c2",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "a1",
      "roundness": null,
      "seed": 722301253,
      "version": 242,
      "versionNonce": 370835493,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1747629934145,
      "link": null,
      "locked": false,
      "text": "1) What is Node.js, and what JavaScript runtime does it use?\n\n2) What is the difference between user-defined modules and built-in modules in Node.js? \n    Give an example of each.\n\n3) Write a simple script using the fs module’s synchronous method readFileSync to read a file \n    and log its contents.\n\n4) Create a function that uses fs.readFileSync to read two files sequentially, concatenate \n    their contents, and write the result to a new file using fs.writeFileSync.\n\n5) How would you handle errors in synchronous fs operations (e.g., readFileSync) without \n    crashing?\n",
      "fontSize": 36,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "1) What is Node.js, and what JavaScript runtime does it use?\n\n2) What is the difference between user-defined modules and built-in modules in Node.js? \n    Give an example of each.\n\n3) Write a simple script using the fs module’s synchronous method readFileSync to read a file \n    and log its contents.\n\n4) Create a function that uses fs.readFileSync to read two files sequentially, concatenate \n    their contents, and write the result to a new file using fs.writeFileSync.\n\n5) How would you handle errors in synchronous fs operations (e.g., readFileSync) without \n    crashing?\n",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "bpqi1fG4BRZbDPVRC-baN",
      "type": "text",
      "x": 774.7999877929688,
      "y": 212.60000610351562,
      "width": 444.99191284179693,
      "height": 85.94562718353977,
      "angle": 0,
      "strokeColor": "#f08c00",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "a2",
      "roundness": null,
      "seed": 1607387461,
      "version": 102,
      "versionNonce": 1407760549,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1747629453953,
      "link": null,
      "locked": false,
      "text": "Assessment-1",
      "fontSize": 68.75650174683183,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Assessment-1",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "URFE3eWsOQy0_okcGFk2n",
      "type": "text",
      "x": 1227.4167405620562,
      "y": 2073.315404331647,
      "width": 465.7811279296875,
      "height": 85.94562718353978,
      "angle": 0,
      "strokeColor": "#f08c00",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "a2V",
      "roundness": null,
      "seed": 437504035,
      "version": 248,
      "versionNonce": 1695060208,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1748577305430,
      "link": null,
      "locked": false,
      "text": "Assessment-2",
      "fontSize": 68.75650174683183,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Assessment-2",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "qsmN5hxupjfuivPuymNEh",
      "type": "text",
      "x": 376.88825124305754,
      "y": 1072.1025231868534,
      "width": 1439.17138671875,
      "height": 810,
      "angle": 0,
      "strokeColor": "#1971c2",
      "backgroundColor": "#ffffff",
      "fillStyle": "solid",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "a3",
      "roundness": null,
      "seed": 1110256452,
      "version": 264,
      "versionNonce": 388891456,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1747978184223,
      "link": null,
      "locked": false,
      "text": "Create a Node.js script that uses the built-in module to:\n\nPerform arithmetic operations (add, subtract, multiply, divide) on two \nhardcoded values (e.g., 10 and 5).\n\nWrite the results of all four operations to a file named results.txt synchronously.\n\nHandle division by zero errors (even though inputs are hardcoded).\n\nFormat the file content as:\n    Addition: 15\n    Subtraction: 5\n    Multiplication: 50\n    Division: 2\n\nIf division by zero occurs, write Division: Error: Division by zero.\n\n",
      "fontSize": 36,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Create a Node.js script that uses the built-in module to:\n\nPerform arithmetic operations (add, subtract, multiply, divide) on two \nhardcoded values (e.g., 10 and 5).\n\nWrite the results of all four operations to a file named results.txt synchronously.\n\nHandle division by zero errors (even though inputs are hardcoded).\n\nFormat the file content as:\n    Addition: 15\n    Subtraction: 5\n    Multiplication: 50\n    Division: 2\n\nIf division by zero occurs, write Division: Error: Division by zero.\n\n",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "0xO6O4h3nv3Xvatg6Fx5K",
      "type": "text",
      "x": 285.08823293251066,
      "y": 1063.7025598079472,
      "width": 37.511993408203125,
      "height": 45,
      "angle": 0,
      "strokeColor": "#1971c2",
      "backgroundColor": "#ffffff",
      "fillStyle": "solid",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "a4",
      "roundness": null,
      "seed": 1282612732,
      "version": 32,
      "versionNonce": 1282326468,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1747630295095,
      "link": null,
      "locked": false,
      "text": "6)",
      "fontSize": 36,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "6)",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "Nst6Q0HZxrdb3Y-6cVwSB",
      "type": "text",
      "x": 584.22367713361,
      "y": 2219.8602468589,
      "width": 1911.7076416015625,
      "height": 1170,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "a5",
      "roundness": null,
      "seed": 1790254435,
      "version": 169,
      "versionNonce": 639709291,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1748842647001,
      "link": null,
      "locked": false,
      "text": "1) Write a function using fs.readFile (callback) to read a file and log its contents. Handle errors \n    properly.\n\n2) Convert the above fs.readFile (callback) example into a Promise-based version using .then() \n    and .catch().\n\n3) Create a basic HTTP server using the http module that responds with \"Hello, World!\" for \n    all requests.\n\n4) What is the role of the event loop in Node.js?\n\n5) Why do synchronous file operations like fs.readFileSync degrade performance in a Node.js server? \n   Explain with respect to the event loop and thread pool.\n\n6) Design a user-defined module that wraps fs.readFileSync and fs.writeFileSync in Promises, and expose\n   methods that can be awaited in another script.\n\n7) Build a simple REST API using the http module that:\n            ==> Accepts GET /users → Returns a mock JSON user list.\n            ==> Accepts POST/register→ register a user with some data\n\n8) Write a Node.js script that connects to a MongoDB database using the official MongoDB Node.js driver. \n   After connecting, insert a sample document into a students collection and retrieve all documents from it.\n \n\n",
      "fontSize": 36,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "1) Write a function using fs.readFile (callback) to read a file and log its contents. Handle errors \n    properly.\n\n2) Convert the above fs.readFile (callback) example into a Promise-based version using .then() \n    and .catch().\n\n3) Create a basic HTTP server using the http module that responds with \"Hello, World!\" for \n    all requests.\n\n4) What is the role of the event loop in Node.js?\n\n5) Why do synchronous file operations like fs.readFileSync degrade performance in a Node.js server? \n   Explain with respect to the event loop and thread pool.\n\n6) Design a user-defined module that wraps fs.readFileSync and fs.writeFileSync in Promises, and expose\n   methods that can be awaited in another script.\n\n7) Build a simple REST API using the http module that:\n            ==> Accepts GET /users → Returns a mock JSON user list.\n            ==> Accepts POST/register→ register a user with some data\n\n8) Write a Node.js script that connects to a MongoDB database using the official MongoDB Node.js driver. \n   After connecting, insert a sample document into a students collection and retrieve all documents from it.\n \n\n",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "X1VTI4swDkNmxnGbYGy0e",
      "type": "text",
      "x": 522.8743048896551,
      "y": 3952.6611830311344,
      "width": 1922.03955078125,
      "height": 3870,
      "angle": 0,
      "strokeColor": "#1971c2",
      "backgroundColor": "#ffffff",
      "fillStyle": "solid",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "a6",
      "roundness": null,
      "seed": 303699999,
      "version": 82,
      "versionNonce": 105988177,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1749102550813,
      "link": null,
      "locked": false,
      "text": "const express = require(\"express\");\nconst fs = require(\"fs\");\nconst mongodb = require(\"mongodb\");\n\n//! create a db connection method\nlet connectDB = async () => {\n  //! create a connection\n  let client = await mongodb.MongoClient.connect(\"mongodb://localhost:27017\");\n  //! create a database\n  let database = client.db(\"form-data\");\n  //! create a collection\n  let collection = await database.createCollection(\"users\"); //~ collection(\"name\") ==> will not return a promise\n\n  return collection;\n};\n\nconst app = express();\n\n//! middleware\napp.use(express.urlencoded({ extended: true })); // ==> use qs module : parsing data html form data\n// app.use(function(req, res, next){\n// statements ===> req.body modify\n//  next()\n// })\n\n\n\n//! form page\napp.get(\"/form\", (req, res) => {\n  // res.send(\"form page!!!!\");\n  // fs.createReadStream(\"./form.html\", \"utf-8\").pipe(res);\n  let readData = fs.createReadStream(\"./form.html\", \"utf-8\"); // source\n  // destination => res ; source.pipe(destination)\n  readData.pipe(res);\n});\n\n//! fetching data from database\napp.get(\"/users\", async (req, res) => {\n  let myCollection = await connectDB();\n  let users = await myCollection.find().toArray(); //cursor or pointer\n  res.send(users);\n});\n\n//! handling form submission\napp.post(\"/abc\", async (req, res) => {\n  //! use the endpoint in the form action\n  //! set method attribute to post\n  //! use name attribute to store the data\n\n  //~ data is always stored in req.body\n  console.log(req.body);\n\n  //! 1st way\n  let { userName, userEmail, userPassword } = req.body;\n\n  //! 2nd way\n  // let a = req.body.userName;\n  // let b = req.body.userEmail;\n  // let c = req.body.userPassword;\n\n  let myCollection = await connectDB();\n  console.log(myCollection);\n\n  // myCollection.insertOne(req.body);\n  myCollection.insertOne({ userName, userEmail, userPassword });\n\n  res.send(`user with ${userEmail} has registered successfully\\n\n    other details ==> ${userName} and ${userPassword} and data is save in database`);\n});\n\n// {userName:\"abc\", userPassword:\"123\", userEmail:\"abc@gmail.com\"}\n\napp.listen(9000, (err) => {\n  if (err) console.log(err);\n  console.log(\"server running at port 9000, http://localhost:9000\");\n});\n\n//! if you want to use ES format syntax, add one property in package.json file ==> \"type\":\"module\"\n\n// node --watch filename ==> watch mode (built-in command) ==> this will only watch one file\n//! nodemon ==> .js file save ==> server will restart\n//? to install nodemon as development dependency ==> npm i nodemon -D\n// nodemon filename\n\n// npm i nodemon -global\n",
      "fontSize": 36,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "const express = require(\"express\");\nconst fs = require(\"fs\");\nconst mongodb = require(\"mongodb\");\n\n//! create a db connection method\nlet connectDB = async () => {\n  //! create a connection\n  let client = await mongodb.MongoClient.connect(\"mongodb://localhost:27017\");\n  //! create a database\n  let database = client.db(\"form-data\");\n  //! create a collection\n  let collection = await database.createCollection(\"users\"); //~ collection(\"name\") ==> will not return a promise\n\n  return collection;\n};\n\nconst app = express();\n\n//! middleware\napp.use(express.urlencoded({ extended: true })); // ==> use qs module : parsing data html form data\n// app.use(function(req, res, next){\n// statements ===> req.body modify\n//  next()\n// })\n\n\n\n//! form page\napp.get(\"/form\", (req, res) => {\n  // res.send(\"form page!!!!\");\n  // fs.createReadStream(\"./form.html\", \"utf-8\").pipe(res);\n  let readData = fs.createReadStream(\"./form.html\", \"utf-8\"); // source\n  // destination => res ; source.pipe(destination)\n  readData.pipe(res);\n});\n\n//! fetching data from database\napp.get(\"/users\", async (req, res) => {\n  let myCollection = await connectDB();\n  let users = await myCollection.find().toArray(); //cursor or pointer\n  res.send(users);\n});\n\n//! handling form submission\napp.post(\"/abc\", async (req, res) => {\n  //! use the endpoint in the form action\n  //! set method attribute to post\n  //! use name attribute to store the data\n\n  //~ data is always stored in req.body\n  console.log(req.body);\n\n  //! 1st way\n  let { userName, userEmail, userPassword } = req.body;\n\n  //! 2nd way\n  // let a = req.body.userName;\n  // let b = req.body.userEmail;\n  // let c = req.body.userPassword;\n\n  let myCollection = await connectDB();\n  console.log(myCollection);\n\n  // myCollection.insertOne(req.body);\n  myCollection.insertOne({ userName, userEmail, userPassword });\n\n  res.send(`user with ${userEmail} has registered successfully\\n\n    other details ==> ${userName} and ${userPassword} and data is save in database`);\n});\n\n// {userName:\"abc\", userPassword:\"123\", userEmail:\"abc@gmail.com\"}\n\napp.listen(9000, (err) => {\n  if (err) console.log(err);\n  console.log(\"server running at port 9000, http://localhost:9000\");\n});\n\n//! if you want to use ES format syntax, add one property in package.json file ==> \"type\":\"module\"\n\n// node --watch filename ==> watch mode (built-in command) ==> this will only watch one file\n//! nodemon ==> .js file save ==> server will restart\n//? to install nodemon as development dependency ==> npm i nodemon -D\n// nodemon filename\n\n// npm i nodemon -global\n",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "wZsvyEzOfgTpoVROklySG",
      "type": "text",
      "x": 997.1549180884504,
      "y": 3879.8737635348753,
      "width": 145.8359375,
      "height": 45,
      "angle": 0,
      "strokeColor": "#1971c2",
      "backgroundColor": "#ffffff",
      "fillStyle": "solid",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "a7",
      "roundness": null,
      "seed": 864822463,
      "version": 24,
      "versionNonce": 77088689,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1749102044545,
      "link": null,
      "locked": false,
      "text": "server.js",
      "fontSize": 36,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "server.js",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "eNyfmpyebtNmnFMa7fzz0",
      "type": "text",
      "x": -117.00080488552743,
      "y": 8116.846652089924,
      "width": 145.8359375,
      "height": 45,
      "angle": 0,
      "strokeColor": "#e03131",
      "backgroundColor": "#ffffff",
      "fillStyle": "solid",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "a8",
      "roundness": null,
      "seed": 493667871,
      "version": 70,
      "versionNonce": 1628952497,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1749103121831,
      "link": null,
      "locked": false,
      "text": "server.js",
      "fontSize": 36,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "server.js",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "ao_uGWoLsGK_jVjANguMY",
      "type": "text",
      "x": 818.7842908536804,
      "y": 8112.73404189893,
      "width": 156.16793823242188,
      "height": 45,
      "angle": 0,
      "strokeColor": "#2f9e44",
      "backgroundColor": "#ffffff",
      "fillStyle": "solid",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "aC",
      "roundness": null,
      "seed": 685858143,
      "version": 63,
      "versionNonce": 903138207,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1749102134093,
      "link": null,
      "locked": false,
      "text": "routes.js",
      "fontSize": 36,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "routes.js",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "K9QixC94ISj64t4VDtMeq",
      "type": "text",
      "x": 1730.523278478976,
      "y": 8095.263243283526,
      "width": 204.4438934326172,
      "height": 45,
      "angle": 0,
      "strokeColor": "#f08c00",
      "backgroundColor": "#ffffff",
      "fillStyle": "solid",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "aD",
      "roundness": null,
      "seed": 2130066207,
      "version": 127,
      "versionNonce": 1239423921,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1749102168777,
      "link": null,
      "locked": false,
      "text": "controller.js",
      "fontSize": 36,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "controller.js",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "Z-pxk3mQkXCOtOqBcc2aL",
      "type": "text",
      "x": 692.7950107365991,
      "y": 8183.5836558702995,
      "width": 640.5477294921875,
      "height": 315,
      "angle": 0,
      "strokeColor": "#2f9e44",
      "backgroundColor": "#ffffff",
      "fillStyle": "solid",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "aE",
      "roundness": null,
      "seed": 460539935,
      "version": 192,
      "versionNonce": 114464017,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1749102239153,
      "link": null,
      "locked": false,
      "text": "in every routes file we have to \nfollow 3 steps\n\n    1) destructure Router component\n        from Express.\n    2) invoke top level function.\n    3) export it.",
      "fontSize": 36,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "in every routes file we have to \nfollow 3 steps\n\n    1) destructure Router component\n        from Express.\n    2) invoke top level function.\n    3) export it.",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "GCUrt46jOrXrhLzMaVhZ_",
      "type": "text",
      "x": 670.7989799776668,
      "y": 8613.571079171885,
      "width": 669.3477172851562,
      "height": 720,
      "angle": 0,
      "strokeColor": "#2f9e44",
      "backgroundColor": "#ffffff",
      "fillStyle": "solid",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "aF",
      "roundness": null,
      "seed": 452394207,
      "version": 222,
      "versionNonce": 1440194577,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1749104996348,
      "link": null,
      "locked": false,
      "text": "let {Router}  = require(\"express\")\nlet {dFP, dHP} = require(\"./controller\")\n\nlet router = Router();\n\n\n//! home page\nrouter.get(\"/\", dFP);\n\n//! form page\nmyRouter.get(\"/form\", dHP );\n\n\n\n\nmodule.exports = router",
      "fontSize": 36,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "let {Router}  = require(\"express\")\nlet {dFP, dHP} = require(\"./controller\")\n\nlet router = Router();\n\n\n//! home page\nrouter.get(\"/\", dFP);\n\n//! form page\nmyRouter.get(\"/form\", dHP );\n\n\n\n\nmodule.exports = router",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "2jQ6ALt7A0jx7sE-xy6d_",
      "type": "text",
      "x": -274.0854809680004,
      "y": 8225.447098936807,
      "width": 435.4198303222656,
      "height": 135,
      "angle": 0,
      "strokeColor": "#e03131",
      "backgroundColor": "#ffffff",
      "fillStyle": "solid",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "aH",
      "roundness": null,
      "seed": 711904095,
      "version": 147,
      "versionNonce": 124264543,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1749103172549,
      "link": null,
      "locked": false,
      "text": "for every routes file\n1) import the routes file.\n2) use it in middleware",
      "fontSize": 36,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "for every routes file\n1) import the routes file.\n2) use it in middleware",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "P0HuFObBn508OA5790nfy",
      "type": "text",
      "x": -332.7416472008745,
      "y": 8421.046587005729,
      "width": 635.4716796875,
      "height": 45,
      "angle": 0,
      "strokeColor": "#e03131",
      "backgroundColor": "#ffffff",
      "fillStyle": "solid",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "aI",
      "roundness": null,
      "seed": 1475628063,
      "version": 62,
      "versionNonce": 1997784767,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1749103164548,
      "link": null,
      "locked": false,
      "text": "let myRoutes = require(\"./routes.js\")",
      "fontSize": 36,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "let myRoutes = require(\"./routes.js\")",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "L_j-v9sGdUpRff1wPJGr6",
      "type": "text",
      "x": 79.74358562974487,
      "y": 8380.83866388887,
      "width": 303.5518798828125,
      "height": 45,
      "angle": 0,
      "strokeColor": "#6741d9",
      "backgroundColor": "#ffffff",
      "fillStyle": "solid",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "aJ",
      "roundness": null,
      "seed": 667932223,
      "version": 96,
      "versionNonce": 1397163039,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1749103554062,
      "link": null,
      "locked": false,
      "text": "\"path of the file\"",
      "fontSize": 36,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "\"path of the file\"",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "ZdTcA6MUGBgrccqDyX8DU",
      "type": "text",
      "x": -318.3141097815193,
      "y": 8166.554455632267,
      "width": 248.6159210205078,
      "height": 45,
      "angle": 0,
      "strokeColor": "#6741d9",
      "backgroundColor": "#ffffff",
      "fillStyle": "solid",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "aK",
      "roundness": null,
      "seed": 1407682769,
      "version": 33,
      "versionNonce": 848510175,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1749103183381,
      "link": null,
      "locked": false,
      "text": "// statements",
      "fontSize": 36,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "// statements",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "6vwpPp4ReZqImxE_y0BLb",
      "type": "text",
      "x": 252.16429668544777,
      "y": 7926.489933857351,
      "width": 96.11996459960938,
      "height": 45,
      "angle": 0,
      "strokeColor": "#6741d9",
      "backgroundColor": "#ffffff",
      "fillStyle": "solid",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "aM",
      "roundness": null,
      "seed": 912767807,
      "version": 12,
      "versionNonce": 862789791,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1749103293987,
      "link": null,
      "locked": false,
      "text": "linked",
      "fontSize": 36,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "linked",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "1vfgg0zTeAEq4dKk3Vrnq",
      "type": "line",
      "x": -25.50637711886384,
      "y": 8104.823582213394,
      "width": 879.8424574035146,
      "height": 203.4044269017686,
      "angle": 0,
      "strokeColor": "#6741d9",
      "backgroundColor": "#ffffff",
      "fillStyle": "solid",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "aN",
      "roundness": {
        "type": 2
      },
      "seed": 77388337,
      "version": 131,
      "versionNonce": 647517727,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1749103423429,
      "link": null,
      "locked": false,
      "points": [
        [
          0,
          0
        ],
        [
          409.6470748954744,
          -202.45835621192327
        ],
        [
          879.8424574035146,
          0.9460706898453282
        ]
      ],
      "lastCommittedPoint": null,
      "startBinding": null,
      "endBinding": null,
      "startArrowhead": null,
      "endArrowhead": null,
      "polygon": false
    },
    {
      "id": "ZBv1keslsffpyV3OLgyTu",
      "type": "text",
      "x": 606.9394520178366,
      "y": 8172.940419255131,
      "width": 15.371994018554688,
      "height": 45,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#ffffff",
      "fillStyle": "solid",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "aO",
      "roundness": null,
      "seed": 98694385,
      "version": 23,
      "versionNonce": 713788753,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1749103663563,
      "link": null,
      "locked": false,
      "text": "1",
      "fontSize": 36,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "1",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "0D4y9DVcLCtEnLmHs3_UK",
      "type": "text",
      "x": 596.2961973578649,
      "y": 8833.53174765716,
      "width": 25.199996948242188,
      "height": 45,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#ffffff",
      "fillStyle": "solid",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "aP",
      "roundness": null,
      "seed": 604556095,
      "version": 3,
      "versionNonce": 181421951,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1749103444627,
      "link": null,
      "locked": false,
      "text": "2",
      "fontSize": 36,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "2",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "Vegh8ZCUpdr3R8yQ3df3C",
      "type": "text",
      "x": -397.0742375728237,
      "y": 8263.526331423122,
      "width": 21.88800048828125,
      "height": 45,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#ffffff",
      "fillStyle": "solid",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "aQ",
      "roundness": null,
      "seed": 2107616177,
      "version": 3,
      "versionNonce": 192623473,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1749103449995,
      "link": null,
      "locked": false,
      "text": "3",
      "fontSize": 36,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "3",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "DlDQPgHVpJjStqd5MGBFQ",
      "type": "text",
      "x": -288.7495856830102,
      "y": 8623.504812392874,
      "width": 327.7799072265625,
      "height": 90,
      "angle": 0,
      "strokeColor": "#e03131",
      "backgroundColor": "#ffffff",
      "fillStyle": "solid",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "aR",
      "roundness": null,
      "seed": 1598936287,
      "version": 50,
      "versionNonce": 769107441,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1749103566456,
      "link": null,
      "locked": false,
      "text": "// ==> middleware\napp.use(myRoutes)",
      "fontSize": 36,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "// ==> middleware\napp.use(myRoutes)",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "70dx3IyS5YM0uhTEQtGti",
      "type": "rectangle",
      "x": 667.0147693974735,
      "y": 8162.29716459516,
      "width": 608.3211618816123,
      "height": 270.57518874246125,
      "angle": 0,
      "strokeColor": "#c2255c",
      "backgroundColor": "#ffffff",
      "fillStyle": "solid",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 0,
      "groupIds": [],
      "frameId": null,
      "index": "aT",
      "roundness": {
        "type": 3
      },
      "seed": 1689819615,
      "version": 29,
      "versionNonce": 1206678993,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1749103716227,
      "link": null,
      "locked": false
    },
    {
      "id": "xzMqT-US_F4ZBJ1oqPJSN",
      "type": "rectangle",
      "x": 643.3630923753143,
      "y": 8150.944352406605,
      "width": 719.0109814736412,
      "height": 393.56394534728497,
      "angle": 0,
      "strokeColor": "#c2255c",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "aV",
      "roundness": {
        "type": 3
      },
      "seed": 676769329,
      "version": 116,
      "versionNonce": 1755387039,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1749103745281,
      "link": null,
      "locked": false
    },
    {
      "id": "zNNs80AYyrM9t5m8p7ptn",
      "type": "rectangle",
      "x": -339.6006551910576,
      "y": 8210.546553239728,
      "width": 582.7773434797612,
      "height": 168.3999692694506,
      "angle": 0,
      "strokeColor": "#c2255c",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "aW",
      "roundness": {
        "type": 3
      },
      "seed": 502474943,
      "version": 67,
      "versionNonce": 837821329,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1749103753546,
      "link": null,
      "locked": false
    },
    {
      "id": "FvR92mG3S38U4LRdtW4pz",
      "type": "text",
      "x": 1633.4222347795485,
      "y": 8259.978579869803,
      "width": 1246.0316162109375,
      "height": 720,
      "angle": 0,
      "strokeColor": "#f08c00",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "aX",
      "roundness": null,
      "seed": 1320648625,
      "version": 61,
      "versionNonce": 1658109553,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1749104960858,
      "link": null,
      "locked": false,
      "text": "let dHP = (req, res) => {\n  res.send(\"Landing page!!!\");\n}\n\nlet dFP = (req, res) => {\n  // res.send(\"form page!!!!\");\n  // fs.createReadStream(\"./form.html\", \"utf-8\").pipe(res);\n  let readData = fs.createReadStream(\"./form.html\", \"utf-8\"); // source\n  // destination => res ; source.pipe(destination)\n  readData.pipe(res);\n}\n\nmoudle.exports = {\n    dHP,\n    dFP\n}",
      "fontSize": 36,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "let dHP = (req, res) => {\n  res.send(\"Landing page!!!\");\n}\n\nlet dFP = (req, res) => {\n  // res.send(\"form page!!!!\");\n  // fs.createReadStream(\"./form.html\", \"utf-8\").pipe(res);\n  let readData = fs.createReadStream(\"./form.html\", \"utf-8\"); // source\n  // destination => res ; source.pipe(destination)\n  readData.pipe(res);\n}\n\nmoudle.exports = {\n    dHP,\n    dFP\n}",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "hqtRZP8KsR0WC8YB1cwlN",
      "type": "text",
      "x": -241.24455185358602,
      "y": 9248.858369781496,
      "width": 194.21994018554688,
      "height": 45,
      "angle": 0,
      "strokeColor": "#f08c00",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "aZ",
      "roundness": null,
      "seed": 1246904799,
      "version": 27,
      "versionNonce": 1144335711,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1749105013478,
      "link": null,
      "locked": false,
      "text": "app.listen()",
      "fontSize": 36,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "app.listen()",
      "autoResize": true,
      "lineHeight": 1.25
    }
  ],
  "appState": {
    "gridSize": 20,
    "gridStep": 5,
    "gridModeEnabled": false,
    "viewBackgroundColor": "#f5faff",
    "lockedMultiSelections": {}
  },
  "files": {}
}